apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
  namespace: k8s-6-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  strategy: {}
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - image: chungeon/accountbook-back:3.0
        name: backend
        ports:
        - containerPort: 8080
          hostPort: 8080
          protocol: TCP
        volumeMounts:
        - name: gcp-key-volume
          mountPath: /gcp-key.json
        - name: ocr-image-volume
          mountPath: /frontend/ocrImage
        envFrom:
        - configMapRef:
            name: backend-cm
        - secretRef:
            name: backend-secret
      volumes:
      - name: gcp-key-volume
        hostPath:
          path: /home/kevin/gcp-key.json
          type: File
      - name: ocr-image-volume
        persistentVolumeClaim:
          claimName: back-nfs-pvc
        
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
  namespace: k8s-6-backend
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    app: backend
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: k8s-6-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  strategy: {}
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: chungeon/accountbook-front:4.0
        ports:
        - containerPort: 3000
          hostPort: 3000
          protocol: TCP
        volumeMounts:
        - name: ocr-image-volume
          mountPath: /frontend/ocrImage
        envFrom:
        - configMapRef:
            name: frontend-cm
      - name: nginx-proxy-conf
        image: nginx:1.25.3-alpine
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: frontend-proxy-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: frontend-proxy-log-volume
          mountPath: /var/log/nginx
      volumes:
      - name: ocr-image-volume
        persistentVolumeClaim:
          claimName: front-nfs-pvc
      - name: frontend-proxy-volume
        configMap:
          name: nginx-conf
      - name: frontend-proxy-log-volume
        hostPath:
          path: /home/kevin/nginx-log
          type: DirectoryOrCreate
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: k8s-6-frontend
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: frontend

